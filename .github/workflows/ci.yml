#=================================================
# https://github.com/P3TERX/Actions-OpenWrt
# Description: Build OpenWrt using GitHub Actions
# Lisence: MIT
# Author: P3TERX
# Blog: https://p3terx.com
#=================================================

name: Build OpenWrt

on: 
  push

jobs:
  build:
    runs-on: ubuntu-18.04

    steps:
    - name: Checkout
      uses: actions/checkout@master

    - name: Initialization environment
      env:
        DEBIAN_FRONTEND: noninteractive
      run: |
        echo "Deleting files, please wait ..."
        sudo rm -rf /usr/share/dotnet /etc/apt/sources.list.d/*
        sudo swapoff /swapfile
        sudo rm -f /swapfile
        #docker rmi `docker images -q`
        #sudo -E apt-get -q purge azure-cli ghc* zulu* hhvm llvm* firefox google* dotnet* powershell openjdk* mysql* php*
        sudo -E apt-get -qq update
        sudo -E apt-get -qq install build-essential asciidoc binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib g++-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler
        sudo -E apt-get -qq install default-jre
        sudo -E apt-get -qq autoremove --purge
        sudo -E apt-get -qq clean
        #curl -fsSL https://raw.githubusercontent.com/P3TERX/dotfiles/master/.bashrc >> ~/.bashrc
        sudo ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

    - name: Update feeds
      run: ./scripts/feeds update -a

    - name: Install feeds
      run: ./scripts/feeds install -a

    - name: Load custom configuration
      env:
        CONFIG_FILE: '.github/workflows/test.config'
      run: |
        [ -e $CONFIG_FILE ] && mv $CONFIG_FILE .config
        make defconfig

#    - name: SSH connection to Actions
#      uses: P3TERX/debugger-action@master

    - name: Download package
      run: |
        make download -j8
        find dl -size -1024c -exec ls -l {} \;
        find dl -size -1024c -exec rm -f {} \;

    - name: Multi-thread compile
      run: |
        echo -e "$(nproc) thread compile"
        make -j$(nproc)

    - name: Single-thread compile
      if: failure()
      run: |
        make -j1 V=s 2>&1 | tee /tmp/openwrt-build.log

    - name: Last fail log
      if: failure()
      run: |
        tail -n 200 /tmp/openwrt-build.log
        ls -l build_dir/target-aarch64_cortex-a53_musl/linux-realtek_rtd129x

    - name: Show Config
      if: failure()
      run: cat .config

    - name: List Target
      if: always()
      run: cd ./bin && find targets

    - name: Upload bin directory
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: OpenWrt_bin
        path: bin

    - name: Organize files
      if: always()
      run: |
        cd ./bin/targets/*/*
        rm -rf packages
        echo "::set-env name=FIRMWARE::$(pwd)"

    - name: Upload firmware
      uses: actions/upload-artifact@master
      if: always()
      with:
        name: OpenWrt_firmware
        path: ${{ env.FIRMWARE }}

    - name: Date
      if: always()
      run: date